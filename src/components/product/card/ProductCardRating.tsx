
import React from 'react';
import { Star, Flag } from "lucide-react";
import { HoverCard, HoverCardContent, HoverCardTrigger } from "@/components/ui/hover-card";

interface ProductCardRatingProps {
  source: string;
  rating: number;
  country?: string;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–º–æ–¥–∑–∏ —Ñ–ª–∞–≥–∞ –ø–æ –∫–æ–¥—É —Å—Ç—Ä–∞–Ω—ã
const getCountryFlag = (countryCode: string): string => {
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã –∫ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º Unicode
  if (!countryCode || countryCode.length !== 2) return 'üåç';
  
  const codePoints = [...countryCode.toUpperCase()]
    .map(char => 127397 + char.charCodeAt(0));
  
  return String.fromCodePoint(...codePoints);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã –ø–æ –∫–æ–¥—É
const getCountryName = (countryCode: string): string => {
  const countries = {
    'DE': '–ì–µ—Ä–º–∞–Ω–∏—è',
    'GB': '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è',
    'US': '–°–®–ê',
    'FR': '–§—Ä–∞–Ω—Ü–∏—è',
    'IT': '–ò—Ç–∞–ª–∏—è',
    'ES': '–ò—Å–ø–∞–Ω–∏—è',
    'NL': '–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã',
    'PL': '–ü–æ–ª—å—à–∞',
    'AT': '–ê–≤—Å—Ç—Ä–∏—è',
    'CH': '–®–≤–µ–π—Ü–∞—Ä–∏—è'
  };
  
  return countries[countryCode.toUpperCase()] || countryCode;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã –ø–æ –¥–æ–º–µ–Ω—É –≤ URL
const detectCountryFromUrl = (source: string, link?: string): string => {
  // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞, –ø—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ –¥–æ–º–µ–Ω—É
  if (link) {
    try {
      // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –¥–æ–º–µ–Ω –∏–∑ URL
      const url = new URL(link);
      const domain = url.hostname.toLowerCase();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–º–µ–Ω—ã –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è
      if (domain.endsWith('.de')) return 'DE';
      if (domain.endsWith('.uk')) return 'GB';
      if (domain.endsWith('.fr')) return 'FR';
      if (domain.endsWith('.it')) return 'IT';
      if (domain.endsWith('.es')) return 'ES';
      if (domain.endsWith('.nl')) return 'NL';
      if (domain.endsWith('.pl')) return 'PL';
      if (domain.endsWith('.at')) return 'AT';
      if (domain.endsWith('.ch')) return 'CH';
      if (domain.endsWith('.com')) {
        // –î–ª—è .com –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–æ–º–µ–Ω—ã
        if (domain.includes('amazon.de')) return 'DE';
        if (domain.includes('amazon.co.uk')) return 'GB';
        if (domain.includes('amazon.fr')) return 'FR';
      }
    } catch (e) {
      console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–æ–º–µ–Ω–∞ –∏–∑ URL:', e);
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞
  const sourceLC = source.toLowerCase();
  if (sourceLC.includes('amazon.de') || sourceLC.includes('amazon de')) return 'DE';
  if (sourceLC.includes('ebay.de') || sourceLC.includes('ebay de')) return 'DE';
  if (sourceLC.includes('otto.de') || sourceLC.includes('otto de')) return 'DE';
  if (sourceLC.includes('zalando.de')) return 'DE';
  
  // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  return '';
};

export const ProductCardRating: React.FC<ProductCardRatingProps> = ({
  source,
  rating,
  country
}) => {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä–∞–Ω—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞ –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
  const detectedCountry = country || detectCountryFromUrl(source);
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–ª–∞–≥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const flag = detectedCountry ? getCountryFlag(detectedCountry) : 'üåç';
  const countryName = detectedCountry ? getCountryName(detectedCountry) : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
  
  return (
    <div className="text-sm my-2 flex items-center justify-between h-5 px-2">
      <span className="text-xs text-left truncate max-w-[60%]">{source}</span>
      <div className="flex items-center gap-2">
        <div className="flex items-center">
          <Star size={14} className="text-yellow-500 fill-yellow-500" />
          <span className="text-xs ml-1">{rating}</span>
        </div>
        
        <HoverCard>
          <HoverCardTrigger asChild>
            <span className="cursor-help text-base">
              {flag}
            </span>
          </HoverCardTrigger>
          <HoverCardContent className="p-2 text-xs">
            <div className="flex items-center gap-2">
              <Flag size={14} />
              <span>–¢–æ–≤–∞—Ä –∏–∑: {countryName}</span>
            </div>
          </HoverCardContent>
        </HoverCard>
      </div>
    </div>
  );
};
